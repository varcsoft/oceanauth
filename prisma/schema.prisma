generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB")
}

model role {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(50)
  created_on  DateTime @db.Timestamp(0)
  modified_on DateTime @default(now()) @db.Timestamp(0)
  user        users[]
}

model users {
  id            Int             @id @default(autoincrement())
  email         String          @unique @db.VarChar(50)
  password      String          @db.VarChar(100)
  status        Boolean         @default(true)
  name          String          @db.VarChar(50)
  address       String?
  profile_pic   String?         @db.VarChar(255)
  token         String?         @db.VarChar(255)
  role_id       Int
  role          role            @relation(fields: [role_id], references: [id], onDelete: Cascade)
  created_on    DateTime        @db.Timestamp(0)
  modified_on   DateTime        @default(now()) @db.Timestamp(0)
  login_history login_history[]
  verification  verification[]
}

model verification {
  id              Int      @id @default(autoincrement())
  user_id         Int?
  user            users?   @relation(fields: [user_id], references: [id], onDelete: SetNull)
  v_code          String
  ipaddress       String
  useragent       String?
  devicetype      String?
  operatingsystem String?
  browser         String?
  verified        Boolean  @default(false)
  date            DateTime @default(now())
}

model login_history {
  id              Int      @id @default(autoincrement())
  user_id         Int?
  user            users?   @relation(fields: [user_id], references: [id], onDelete: SetNull)
  ipaddress       String
  useragent       String?
  devicetype      String?
  operatingsystem String?
  browser         String?
  timestamp       DateTime @default(now())
}
